Priority list:
1-9 as in Vim (9 = required for next release, 5 = would be nice, 1 = probably not)

ARCHITECTURE:
- decide on how to document Arrays in our jsdoc(ish) documentation. Host docs
  on the website - is there even a documentation tool that can parse our source
  sensibly?

  There are a few that can, to some extent. We more or less follow the
  ScriptDoc standard, and we're very close to a few other standards.
  Unfortunately, nearly all of the parsers are lacking in some way, bloated to
  hell, and/or lack support for JS 1.8. --Kris

REFACTORING:
- remove unnecessary usage of "self"

BUGS:
- insert abbreviations broken on <space>
- :sidebar improvements (:sidebar! Downloads while downloads is open should refocus the sidebar)
- ;s saves the page rather than the image
- RC file is sourced once per window
- :undo seems to be affected by the tabstrip state
- the :help version-information page is no longer generated

(recent Mercurial regressions):

FEATURES:
8 Document Caret and Visual modes.
8 replace global variables with plugin scoped user options
8 fix local options
8 adaptive timeout for auto-completions, :set completions can be updated more often than
  :open foo
8 use the storage module for autocommands
8 add support for filename special characters such as %
8 :redir and 'verbosefile'
8 middleclick in content == p, and if command line is open, paste there the clipboard buffer
8 all search commands should start searching from the top of the visible viewport
8 <C-o>/<C-i> should work as in vim (i.e., save page positions as well as
  locations in the history list).
8 jump to the next heading with ]h, next image ]i, previous textbox [t and so on
7 consider generating most of :help :index
7 use ctrl-n/p in insert mode for word completion
7 implement QuickFix window based on ItemList
7 wherever possible: get rid of dialogs and ask console-like dialog questions
  or write error prompts directly on the webpage or with :echo()
7 [d could go to the last domain in the history stack. So if I browse from
  google to another page and click 10 links there, [d would take me back to the google page
  opera's fast forward does something like this
7 make an option to disable session saving by default when you close Firefox
7 The output of the pageinfo-command should contain the security-information of ssl-encrypted sites
7 :grep support (needs location list)
6 :mksession
6 add [count] support to :b* and :tab* commands where missing
6 registers
  Here, unlike Vim, y and "*y would be equivalent. That is, the pasteboard would
  always be the default register. --Ted
6 check/correct spellings in insert mode with some mappings
6 add more autocommands (TabClose, TabOpen, TabChanged etc)
6 Use ctrl-w+j/k/w to switch between sidebar, content, preview window
6 Command :tags for getting a list of used tags
6 ;?<hint> should show more information
6 Add information to dactyl/HACKING file about testing and optimization
5 when looking at a zoomed out image (because it's large), zi should zoom in
  maybe with this? : http://mxr.mozilla.org/seamonkey/source/content/html/document/public/nsIImageDocument.idl
5 make a command to search within google search results
  (http://gadelkareem.com/2007/01/28/using-google-ajax-api-as-an-array/)
  maybe impossible, needs a per-site key from google
4 } { should jump to the next paragraph of the page
3 A format for 'guitablabel' and 'statusline'
3 add a command-line window (:help cmdline-window in Vim).
3 Splitting Windows with [:sp :vsp ctrl-w,s ctrl-w,v] and closing with [ctrl-w,q], moving with [ctrl-w,w or tab]
  have a look into the split browser extension
1 Reformat dactyl/HACKING so that git diff can find sections and report changes @ somewhere

